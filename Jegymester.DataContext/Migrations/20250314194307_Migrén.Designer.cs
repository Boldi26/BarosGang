// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Jegymester.DataContext.Context;

#nullable disable

namespace Jegymester.DataContext.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250314194307_Migrén")]
    partial class Migrén
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Jegymester.DataContext.Models.Movie", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("AgeLimit")
                    .HasColumnType("int");

                b.Property<string>("Genre")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Length")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Movies");
            });

            modelBuilder.Entity("Jegymester.DataContext.Models.Screening", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("Capacity")
                    .HasColumnType("int");

                b.Property<int>("MovieId")
                    .HasColumnType("int");

                b.Property<int>("Price")
                    .HasColumnType("int");

                b.Property<int>("Room")
                    .HasColumnType("int");

                b.Property<DateTime>("StartTime")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("MovieId");

                b.ToTable("Screenings");
            });

            modelBuilder.Entity("Jegymester.DataContext.Models.Ticket", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("ScreeningId")
                    .HasColumnType("int");

                b.Property<int?>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ScreeningId");

                b.HasIndex("UserId");

                b.ToTable("Tickets");
            });

            modelBuilder.Entity("Jegymester.DataContext.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsRegistered")
                    .HasColumnType("bit");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("Jegymester.DataContext.Models.Screening", b =>
            {
                b.HasOne("Jegymester.DataContext.Models.Movie", "Movie")
                    .WithMany()
                    .HasForeignKey("MovieId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Movie");
            });

            modelBuilder.Entity("Jegymester.DataContext.Models.Ticket", b =>
            {
                b.HasOne("Jegymester.DataContext.Models.Screening", "Screening")
                    .WithMany()
                    .HasForeignKey("ScreeningId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Jegymester.DataContext.Models.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId");

                b.Navigation("Screening");

                b.Navigation("User");
            });
#pragma warning restore 612, 618
        }
    }
}
